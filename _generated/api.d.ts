/* eslint-disable */
/**
 * Generated `api` utility.
 *
 * THIS CODE IS AUTOMATICALLY GENERATED.
 *
 * Generated by convex@1.6.3.
 * To regenerate, run `npx convex dev`.
 * @module
 */

import type {
  ApiFromModules,
  FilterApi,
  FunctionReference,
} from "convex/server";
import type * as chat from "../chat.js";
import type * as chat_detail from "../chat_detail.js";
import type * as chat_history from "../chat_history.js";
import type * as openai_assistant from "../openai_assistant.js";
import type * as openai_model from "../openai_model.js";
import type * as user_account from "../user_account.js";
import type * as users from "../users.js";
import type * as utils_account_index from "../utils/account/index.js";
import type * as utils_auth from "../utils/auth.js";
import type * as utils_chat_chat from "../utils/chat/chat.js";
import type * as utils_chat_chat_collect from "../utils/chat/chat_collect.js";
import type * as utils_chat_index from "../utils/chat/index.js";
import type * as utils_chat_token from "../utils/chat/token.js";
import type * as utils_langchain_chat from "../utils/langchain/chat.js";
import type * as utils_langchain_index from "../utils/langchain/index.js";
import type * as utils_openai_assistant from "../utils/openai/assistant.js";
import type * as utils_openai_chat from "../utils/openai/chat.js";
import type * as utils_openai_index from "../utils/openai/index.js";
import type * as utils_openai_message from "../utils/openai/message.js";
import type * as utils_openai_model from "../utils/openai/model.js";
import type * as utils_openai_request from "../utils/openai/request.js";
import type * as utils_openai_thread from "../utils/openai/thread.js";
import type * as utils_string from "../utils/string.js";
import type * as v2_v2_chat_collect from "../v2/v2_chat_collect.js";

/**
 * A utility for referencing Convex functions in your app's API.
 *
 * Usage:
 * ```js
 * const myFunctionReference = api.myModule.myFunction;
 * ```
 */
declare const fullApi: ApiFromModules<{
  chat: typeof chat;
  chat_detail: typeof chat_detail;
  chat_history: typeof chat_history;
  openai_assistant: typeof openai_assistant;
  openai_model: typeof openai_model;
  user_account: typeof user_account;
  users: typeof users;
  "utils/account/index": typeof utils_account_index;
  "utils/auth": typeof utils_auth;
  "utils/chat/chat": typeof utils_chat_chat;
  "utils/chat/chat_collect": typeof utils_chat_chat_collect;
  "utils/chat/index": typeof utils_chat_index;
  "utils/chat/token": typeof utils_chat_token;
  "utils/langchain/chat": typeof utils_langchain_chat;
  "utils/langchain/index": typeof utils_langchain_index;
  "utils/openai/assistant": typeof utils_openai_assistant;
  "utils/openai/chat": typeof utils_openai_chat;
  "utils/openai/index": typeof utils_openai_index;
  "utils/openai/message": typeof utils_openai_message;
  "utils/openai/model": typeof utils_openai_model;
  "utils/openai/request": typeof utils_openai_request;
  "utils/openai/thread": typeof utils_openai_thread;
  "utils/string": typeof utils_string;
  "v2/v2_chat_collect": typeof v2_v2_chat_collect;
}>;
export declare const api: FilterApi<
  typeof fullApi,
  FunctionReference<any, "public">
>;
export declare const internal: FilterApi<
  typeof fullApi,
  FunctionReference<any, "internal">
>;
